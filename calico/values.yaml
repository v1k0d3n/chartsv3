# Copyright 2019 Brandon B. Jozsa/JinkIT and its Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# DEPLOYMENT DETAILS:
#  - Global Version: v3.8.2
#  - Node Version: v3.8.2
#  - CNI Version: v3.8.2
# DOCUMENTATION: https://docs.projectcalico.org/v3.4/releases#v3.8.2

release_group: null

labels:
  release_group: false
  component: false
  date: false
  typha_datastore:
    app: false
    k8s-app: calico-typha
  calico_node:
    app: false
    k8s-app: calico-node
  typha_autoscale_horz:
    app: false
    k8s-app: calico-typha-autoscaler
  typha_autoscale_vert:
    app: false
    k8s-app: calico-typha-autoscaler
  ## UNCOMMENT x2: CALICO TYPHA/NODE AUTOSCALING
  # node_vertical_autoscaler:
  #   app: false
  #   k8s-app: calico-node-autoscaler

pod:
  dns_policy: Default
  replicas:
    typha_datastore: 1
    ## UNCOMMENT x2: CALICO TYPHA/NODE AUTOSCALING
    typha_autoscale_vert: 1
    typha_autoscale_horz: 1
    # node_vertical_autoscaler: 1
  min_ready_seconds: 0
  lifecycle:
    typha_datastore:
      upgrades:
        deployments:
          revision_history: 5
          pod_replacement_strategy: RollingUpdate
          rolling_update:
            max_unavailable: 1
            max_surge: 1
      disruption_budget:
        typha_datastore:
          min_available: 1
      termination_grace_period:
        typha_datastore:
          timeout: 30

  ## UNCOMMENT x2: CALICO PRIORITY CLASSES
  priority:
    class:
      typha_autoscale_vert: system-cluster-critical
      typha_autoscale_horz: system-cluster-critical
  #     node_vertical_autoscaler: system-cluster-critical
  #     typha_datastore: system-cluster-critical
  #     calico_node: system-cluster-critical

containers:
  typha_datastore:
    image: calico/typha:v3.8.2
    pull_policy: IfNotPresent
  calico_node:
    image: calico/node:v3.8.2
    pull_policy: IfNotPresent
  install_cni:
    image: calico/cni:v3.8.2
    pull_policy: IfNotPresent
  ## UNCOMMENT x2: CALICO TYPHA/NODE AUTOSCALING
  typha_autoscale_horz:
    image: k8s.gcr.io/cluster-proportional-autoscaler-amd64:1.1.2-r2
    pull_policy: IfNotPresent
  typha_autoscale_vert:
    image: k8s.gcr.io/cpvpa-amd64:v0.6.0
    pull_policy: IfNotPresent
  # node_vertical_autoscaler:
  #   image: k8s.gcr.io/cpvpa-amd64:v0.6.0
  #   pull_policy: IfNotPresent

args:
  ## UNCOMMENT x2: CALICO TYPHA/NODE AUTOSCALING
  typha_autoscale_vert:
    target: deployment/calico-typha
    logtostderr: true
    poll_period_seconds: 30
    config_file: /etc/config/typha-autoscaler
    v: 2
  typha_autoscale_horz:
    target: deployment/calico-typha
    logtostderr: true
    configmap: calico-typha-horizontal-autoscaler
    v: 2
  # node_vertical_autoscaler:
  #   target: daemonset/calico-node
  #   logtostderr: true
  #   poll_period_seconds: 30
  #   config_file: /etc/config/node-autoscaler
  #   v: 2

variables:
  typha_datastore:
    calico_typha:
      TYPHA_LOGSEVERITYSCREEN: "info"
      TYPHA_LOGFILEPATH: "none"
      TYPHA_LOGSEVERITYSYS: "none"
      TYPHA_CONNECTIONREBALANCINGMODE: "kubernetes"
      TYPHA_DATASTORETYPE: "kubernetes"
      TYPHA_HEALTHENABLED: "true"
      ## UNCOMMENT: TYPHA DEPLOYMENT SCALING
      # TYPHA_REPORTINGINTERVALSECS: "0"
      # TYPHA_MAXCONNECTIONSLOWERLIMIT: "1"
      ## UNCOMMENT: TYPHA PROMETHEUS METRICS
      # TYPHA_PROMETHEUSMETRICSENABLED: "true"
      # TYPHA_PROMETHEUSMETRICSPORT: "9093"
  calico_node:
    calico_node:
      CALICO_DISABLE_FILE_LOGGING: "true"
      CALICO_IPV4POOL_IPIP: "Always"
      CALICO_IPV4POOL_CIDR: "10.25.0.0/16"
      CLUSTER_TYPE: "k8s,bgp"
      DATASTORE_TYPE: "kubernetes"
      FELIX_DEFAULTENDPOINTTOHOSTACTION: "ACCEPT"
      FELIX_HEALTHENABLED: "true"
      FELIX_IPV6SUPPORT: "false"
      FELIX_LOGSEVERITYSCREEN: "info"
      IP: "autodetect"
      WAIT_FOR_DATASTORE: "true"
      CALICO_NETWORKING_BACKEND:
        valueFrom:
          configMapKeyRef:
            name: calico-config
            key: calico_backend
      FELIX_IPINIPMTU:
        valueFrom:
          configMapKeyRef:
            name: calico-config
            key: veth_mtu
      FELIX_TYPHAK8SSERVICENAME:
        valueFrom:
          configMapKeyRef:
            name: calico-config
            key: typha_service_name
      NODENAME:
        valueFrom:
          fieldRef:
            fieldPath: spec.nodeName

    install_cni:
      CNI_CONF_NAME: "10-calico.conflist"
      SLEEP: "false"
      ## UNCOMMENT x2: ONLY WHEN CNI IS INSTALLING VIA ENV VARIABLES
      # CNI_CONF_NAME: "10-calico.conflist"
      # CNI_NETWORK_CONFIG: |-
      #   {"name":"k8s-pod-network","cniVersion":"0.3.0","plugins":[{"type":"calico","log_level":"debug","datastore_type":"kubernetes","nodename":"__KUBERNETES_NODE_NAME__","ipam":{"type":"host-local","subnet":"usePodCidr"},"policy":{"type":"k8s","k8s_auth_token":"__SERVICEACCOUNT_TOKEN__"},"kubernetes":{"k8s_api_root":"https://__KUBERNETES_SERVICE_HOST__:__KUBERNETES_SERVICE_PORT__","kubeconfig":"__KUBECONFIG_FILEPATH__"}},{"type":"portmap","capabilities":{"portMappings":true},"snat":true}]}

volumes:
  pods:
    calico_node:
    ## HINT: Calico Node
    - name: lib-modules
      hostPath:
        path: /lib/modules
    - name: var-run-calico
      hostPath:
        path: /var/run/calico
    - name: var-lib-calico
      hostPath:
        path: /var/lib/calico
    ## UNCOMMENT x2: WHEN RUNNING CALICO SMALL
    - name: xtables-lock
      hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
    ## HINT: Used to install CNI binaries on the host
    - name: cni-bin-dir
      hostPath:
        path: /opt/cni/bin
    ## HINT: Used to install CNI network config on the host
    - name: cni-net-dir
      hostPath:
        path: /etc/cni/net.d
    ## UNCOMMENT x2: WHEN RUNNING CALICO CALICO MEDIUM/LARGE
    ## Mount in the Felix config file from the host.
    # - name: etc-calico
    #   hostPath:
    #     path: /etc/calico
#### OLD:
    typha_autoscale_vert:
    - name: config
      configMap:
        name: calico-typha-vertical-autoscaler
    #node_vertical_autoscaler:
    #- name: config
    #  configMap:
    #    name: calico-node-vertical-autoscaler
    #typha_datastore:
    #- name: etc-calico
    #  hostPath:
    #    path: /etc/calico
  containers:
    calico_node:
    - mountPath: /lib/modules
      name: lib-modules
      readOnly: true
    - mountPath: /var/run/calico
      name: var-run-calico
      readOnly: false
    - mountPath: /var/lib/calico
      name: var-lib-calico
      readOnly: false
    ## UNCOMMENT x2: WHEN RUNNING CALICO SMALL
    - mountPath: /run/xtables.lock
      name: xtables-lock
      readOnly: false
    ## UNCOMMENT x2: WHEN RUNNING CALICO MEDIUM/LARGE
    # - mountPath: /etc/calico
    #   name: etc-calico
    #   readOnly: true
    install_cni:
    - mountPath: /host/opt/cni/bin
      name: cni-bin-dir
    - mountPath: /host/etc/cni/net.d
      name: cni-net-dir
#### OLD:
    typha_autoscale_vert:
    - name: config
      mountPath: /etc/config
    #node_vertical_autoscaler:
    #- name: config
    #  mountPath: /etc/config
    #typha_datastore:
    #- mountPath: /etc/calico
    #  name: etc-calico
    #  readOnly: true

# THIS IS ALL CORRECT:
config:
  common:
    datastore:
      type: kubernetes
  configmap:
  node:
    cni:
      calico:
        cni_network_config: |-
          {"name":"k8s-pod-network","cniVersion":"0.3.1","plugins":[{"type":"calico","log_level":"info","datastore_type":"kubernetes","nodename":"__KUBERNETES_NODE_NAME__","mtu":"__CNI_MTU__","ipam":{"type":"calico-ipam"},"policy":{"type":"k8s"},"kubernetes":{"kubeconfig":"__KUBECONFIG_FILEPATH__"}},{"type":"portmap","snat":true,"capabilities":{"portMappings":true}}]}
  install_cni:
    calico_backend: "bird"
    typha_service_name: "calico-typha"
    veth_mtu: "1440"
  calico:
    cni_config: |-
      {"name":"k8s-pod-network","cniVersion":"0.3.0","plugins":[{"type":"calico","log_level":"info","datastore_type":"kubernetes","nodename":"__KUBERNETES_NODE_NAME__","mtu": __CNI_MTU__,"ipam":{"type":"host-local","subnet":"usePodCidr"},"policy":{"type":"k8s"},"kubernetes":{"kubeconfig":"__KUBECONFIG_FILEPATH__"}},{"type":"portmap","snat":true,"capabilities":{"portMappings":true}}]}
  typha_autoscale_horz:
    ladder: |-
      {"coresToReplicas":[],"nodesToReplicas":[[1,1],[10,2],[100,3],[250,4],[500,5],[1000,6],[1500,7],[2000,8]]}
  typha_autoscale_vert:
    typha_autoscaler: |-
      {"calico-typha":{"requests":{"cpu":{"base":"120m","step":"80m","nodesPerStep":10,"max":"1000m"}}}}

services:
  calico:
    name: calico
    advertise_address: 10.96.0.10

networking:
  podSubnet: 192.168.0.0/16

security:
  rbac:
    calico_node:
      - apigroups:
          - ""
        resources:
          - pods
          - nodes
          - namespaces
        verbs:
          - get
      - apigroups:
          - ""
        resources:
          - endpoints
          - services
        verbs:
          - watch
          - list
          - get
      - apigroups:
          - ""
        resources:
          - nodes/status
        verbs:
          - patch
          - update
      - apigroups:
          - "networking.k8s.io"
        resources:
          - networkpolicies
        verbs:
          - watch
          - list
      - apigroups:
          - ""
        resources:
          - pods
          - namespaces
          - serviceaccounts
        verbs:
          - list
          - watch
      - apigroups:
          - ""
        resources:
          - pods/status
        verbs:
          - patch
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - globalfelixconfigs
          - felixconfigurations
          - bgppeers
          - globalbgpconfigs
          - bgpconfigurations
          - ippools
          - globalnetworkpolicies
          - globalnetworksets
          - networkpolicies
          - clusterinformations
          - hostendpoints
        verbs:
          - get
          - list
          - watch
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - ippools
          - felixconfigurations
          - clusterinformations
        verbs:
          - create
          - update
      - apigroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - watch
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - bgpconfigurations
          - bgppeers
        verbs:
          - create
          - update
    typha_autoscale_vert:
      - apigroups:
          - ""
        resources:
          - "nodes"
        verbs:
          - "list"
      - apigroups:
          - "apps"
          - "extensions"
        resources:
          - "deployments"
        verbs:
          - "patch"
    calico_autoscale_vert:
      - apigroups:
          - ""
        resources:
          - "nodes"
        verbs:
          - "list"
      - apigroups:
          - "apps"
          - "extensions"
        resources:
          - "deployments"
          - "daemonsets"
        verbs:
          - "patch"
    calico_node_calico:
      - apigroups:
          - ""
        resources:
          - namespaces
          - serviceaccounts
        verbs:
          - get
          - list
          - watch
      - apigroups:
          - ""
        resources:
          - endpoints
        verbs:
          - get
      - apigroups:
          - ""
        resources:
          - services
        verbs:
          - get
      - apigroups:
          - ""
        resources:
          - pods/status
        verbs:
          - update
      - apigroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
          - watch
          - patch
      - apigroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - update
          - watch
      - apigroups:
          - "extensions"
        resources:
          - networkpolicies
        verbs:
          - get
          - list
          - watch
      - apigroups:
          - "networking.k8s.io"
        resources:
          - networkpolicies
        verbs:
          - watch
          - list
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - globalfelixconfigs
          - felixconfigurations
          - bgppeers
          - globalbgpconfigs
          - bgpconfigurations
          - ippools
          - globalnetworkpolicies
          - globalnetworksets
          - networkpolicies
          - clusterinformations
          - hostendpoints
        verbs:
          - create
          - get
          - list
          - update
          - watch
    typha_autoscale_horz:
      - apigroups:
          - ""
        resources:
          - "nodes"
        verbs:
          - "list"
    typha_autoscale_horz_ns:
      - apigroups:
          - ""
        resources:
          - "nodes"
        verbs:
          - "list"
    canal_node:
      - apigroups:
          - ""
        resources:
          - pods
          - nodes
          - namespaces
        verbs:
          - get
      - apigroups:
          - ""
        resources:
          - endpoints
          - services
        verbs:
          - watch
          - list
          - get
      - apigroups:
          - ""
        resources:
          - nodes/status
        verbs:
          - patch
          - update
      - apigroups:
          - "networking.k8s.io"
        resources:
          - networkpolicies
        verbs:
          - watch
          - list
      - apigroups:
          - ""
        resources:
          - pods
          - namespaces
          - serviceaccounts
        verbs:
          - list
          - watch
      - apigroups:
          - ""
        resources:
          - pods/status
        verbs:
          - patch
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - globalfelixconfigs
          - felixconfigurations
          - bgppeers
          - globalbgpconfigs
          - bgpconfigurations
          - ippools
          - globalnetworkpolicies
          - globalnetworksets
          - networkpolicies
          - clusterinformations
          - hostendpoints
        verbs:
          - get
          - list
          - watch
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - ippools
          - felixconfigurations
          - clusterinformations
        verbs:
          - create
          - update
      - apigroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - watch
      - apigroups:
          - "crd.projectcalico.org"
        resources:
          - bgpconfigurations
          - bgppeers
        verbs:
          - create
          - update

crds:
  bgpconfigurations: true
  bgppeers: true
  blockaffinities: true
  clusterinformations: true
  felixconfigurations: true
  globalnetworkpolicies: true
  globalnetworksets: true
  hostendpoints: true
  ipamblocks: true
  ipamconfigs: true
  ipamhandles: true
  ippools: true
  networkpolicies: true
  networksets: true

manifests:
  calico_cm: true
  calico_kube_controllers_clusterrole: true
  calico_kube_controllers_clusterrolebinding: true
  calico_kube_controllers_deploy: true
  calico_kube_controllers_sa: true
  calico_node_clusterrole: true
  calico_node_clusterrolebinding: true
  calico_node_ds: true
  calico_node_sa: true
  calico_typha_deploy: true
  calico_typha_pdb: true
  calico_typha_svc: true
